@model Base_Project.Models.Product.EditViewModel

@{
    ViewBag.Title = "商品管理";
    ViewBag.ID = "Product";
}

<form id="Form">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.SID)

    <div class="form-horizontal">
        <h4>@ViewBag.Title</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SID)

        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control required" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DESC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DESC, new { htmlAttributes = new { @class = "form-control required" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CONTENT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.CONTENT, new { htmlAttributes = new { @class = "form-control required" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control required" } })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <div class="form-check form-check-inline">
                        @Html.CheckBoxFor(model => model.ENABLED, new { @class = "form-check-input" })
                        @Html.LabelFor(model => model.ENABLED, htmlAttributes: new { @class = "form-check-label" })
                    </div>
                </div>
            </div>

            @if (!String.IsNullOrEmpty(Model.SID))
            {
                <div class="form-group">
                    <div class="col-md-10">
                        創建日期：@Model.CDT.ToString("yyyy年MM月dd日 HH:mm:ss")
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        修改日期：@Model.MDT.ToString("yyyy年MM月dd日 HH:mm:ss")
                    </div>
                </div>
            }

            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="送出" class="btn btn-default" id="Send" />
                </div>
            </div>

            <div class="error-utility text-danger"></div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("返回列表", "Index")
</div>

@section script{
    @{Html.RenderPartial("~/Areas/Sysmgt/Views/Shared/Common/_Js.cshtml", Model); }
    <script>
        $(function(){
            focusMenu("@ViewBag.ID")
        })
    $("#Send").click(function (e) {
        e.preventDefault()

        if (!$("#Form").valid()) {
            return
        }

        showLoading()

        var form = $("#Form").serialize()

        $.ajax({
            type: "POST",
            url: "@Url.Action("Edit")",
            data: form,
            success: function (data) {
                hideLoading()
                if (data.Success) {
                    location.href = "@Url.Action("Index")"
                }
                showError(data.ErrorMsgs)

            },
            fail: function (ex) {
                hideLoading()
                showError(ex.reponseText)
            }
        })
    })
    </script>
}

